<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>小炒肉</title><link>https://jicki.cn/</link><description>小炒肉博客, kubernetes, docker, jicki</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jicki@qq.com (小炒肉)</managingEditor><webMaster>jicki@qq.com (小炒肉)</webMaster><lastBuildDate>Mon, 17 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jicki.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 语言基础</title><link>https://jicki.cn/golang-study-notes/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-study-notes/</guid><description>Go 简介 Go（又称Golang）是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。 罗伯特·格瑞史莫，罗勃·派克</description></item><item><title>Go Web编程</title><link>https://jicki.cn/golang-study-web-notes/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-study-web-notes/</guid><description>Go 学习目录 note-7 Go Web编程 - PV UV IP PR 并发 Go Web编程 - 通讯协议 TLV Go Web编程 - RESTful 框架 Go Web编程 - MVC 框架 Go Web编程 - Gin 简介 Go Web编程 - Go HTML</description></item><item><title>Kubernetes 包管理 Helm</title><link>https://jicki.cn/helm/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/helm/</guid><description>Helm Helm 是 Kubernetes 的包管理器, 可以帮我们简化 kubernetes 应用部署操作, 在多项目的环境下, 应用的部署与管理就会变的频繁与复杂. Helm 通过包的方式, 可简化应用的版本发布</description></item><item><title>Ansible 从入门到放弃</title><link>https://jicki.cn/ansible-playbook/</link><pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/ansible-playbook/</guid><description>前言 运维自动化的发展历程以及技术应用 本地部署 On-Premises 如下都需要自己 部署/配置 以及维护。 Application Data Runtime Middleware OS Virtualization Servers Storage NetWorking 基础设施既服务 ( 如 阿里云 ) IaaS - Infrastructure as a Service 如下</description></item><item><title>GitOps 实现云原生的持续交付</title><link>https://jicki.cn/gitops-kubernetes/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/gitops-kubernetes/</guid><description>GitOps GitOps是一种持续交付的方式。它的核心思想是将应用系统的声明性基础架构和应用程序存放在Git版本库中 Git 作为交付流水线的核心, 每个开发人</description></item><item><title>CI/CD with Drone Kubernetes and Gogs</title><link>https://jicki.cn/drone-kubernetes/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/drone-kubernetes/</guid><description>Drone Drone is a Container-Native, Continuous Delivery Platform。 我们可以理解为 Drone 是基于 容器原生的一个 持续集成、持续交付的平台。 官方网站是 https://drone.io/ Drone 支持的Git仓库有 GitHub GitLab Gogs Gitea Bitbucket Cloud Bitbucket</description></item><item><title>Go Web 开发 通用模板</title><link>https://jicki.cn/golang-web-app/</link><pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-web-app/</guid><description>Go Web 通用脚手架 脚手架说明 Viper 用于配置文件管理。 Zap 用于日志管理。</description></item><item><title>Github Actions 构建 Hugo</title><link>https://jicki.cn/hugo-github-pages-github-actions/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/hugo-github-pages-github-actions/</guid><description>Hugo Hugo Hugo 是基于 Go 语言开发的静态网站构建程序. 流程 创建Github仓库 创建 hugo 仓库, 并设置为 Private 此仓库用于存放 hugo 源代码. 创建 jicki.github.io 仓库, 此仓库用于 Github Pages .</description></item><item><title>jenkins gradle android</title><link>https://jicki.cn/jenkins-gradle-android/</link><pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/jenkins-gradle-android/</guid><description>Jenkins 构建 Android 包 使用 Jenkins 构建 Android APK 包 使用 腾讯 乐固 进行加固 加固以后进行重新签名 重新签名的 APK 上传到 蒲公英平台 发送通知到 企业微信群中 安装部署 Jenkins 这一部分就省略</description></item><item><title>Kubernetes Horizontal Pod Autoscaler</title><link>https://jicki.cn/horizontal-pod-autoscale/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/horizontal-pod-autoscale/</guid><description>Horizontal Pod Autoscaler Pod 水平自动伸缩（Horizontal Pod Autoscaler） 简称 HPA HPA 可以基于CPU利用率自动伸缩 replication controller、deploym</description></item></channel></rss>