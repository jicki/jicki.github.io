<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>golang - 分类 - 小炒肉</title><link>https://jicki.cn/categories/golang/</link><description>golang - 分类 - 小炒肉</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jicki@qq.com (小炒肉)</managingEditor><webMaster>jicki@qq.com (小炒肉)</webMaster><lastBuildDate>Thu, 09 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jicki.cn/categories/golang/" rel="self" type="application/rss+xml"/><item><title>Go 语言基础</title><link>https://jicki.cn/golang-study-notes/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-study-notes/</guid><description>Go 简介 Go（又称Golang）是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。 罗伯特·格瑞史莫，罗勃·派克</description></item><item><title>Go Web编程</title><link>https://jicki.cn/golang-study-web-notes/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-study-web-notes/</guid><description>Go 学习目录 【Go Web编程 - PV/UV/IP/PR/并发 】 【Go Web编程 - 通讯协议 TLV 】 【Go Web编程 - RESTful 框架 】 【Go Web编程 - Web框</description></item><item><title>LeetCode golang 题目</title><link>https://jicki.cn/leetcode-100/</link><pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/leetcode-100/</guid><description>LeetCode 基于多写多练的原则, LeetCode 刷起来..</description></item><item><title>Golang 轻量级TCP框架 Zinx</title><link>https://jicki.cn/golang-zinx-tcp-framework/</link><pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-zinx-tcp-framework/</guid><description>Zinx Zinx 是一个基于Golang的轻量级并发服务器框架. [Github] https://github.com/aceld/zinx Zinx 架构图 Zinx 使用 创建Server句柄 配置自定义Router路由以及定义业务功能 启动服务 Server</description></item><item><title>Context</title><link>https://jicki.cn/golang-web-note-11/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-web-note-11/</guid><description>Go Web 编程 Context Go 语言的 Context 既, 上下文。 是Golang 语言标准库 golang.org/x/net/context。 golang 的 Context包, 是专门用来简</description></item><item><title>Cookie 与 Session</title><link>https://jicki.cn/golang-web-note-9/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-web-note-9/</guid><description>Go Web 编程 HTTP 协议是无状态的，对于一个浏览器发出的多次请求，WEB 服务器无法区分, 是不是来源于同一个浏览器, 所以诞生了Cookie 与 Session 使某个域名</description></item><item><title>Gin templates</title><link>https://jicki.cn/golang-web-note-13/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-web-note-13/</guid><description>Go Web 编程 gin 框架 templates templates 的基础语法以及概念在前面的文章中有记录 HTML 基础概念 gin 下的例子 go 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29</description></item><item><title>Gin 框架</title><link>https://jicki.cn/golang-web-note-2/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-web-note-2/</guid><description>Go Web 编程 Gin 框架 官方 中文文档 https://gin-gonic.com/zh-cn/docs/ Gin 简介 Gin 是一个用 Go (Golang) 编写的 HTTP web 框架。 使用 httprouter, 因此是一个拥有很好性能的API框架。 Gin 特性 快速 基于 Radix 树的路由，内存占用</description></item><item><title>Go 操作 Redis</title><link>https://jicki.cn/golang-web-note-6/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-web-note-6/</guid><description><![CDATA[Go Web 编程 Golang go-redis Go 操作 redis 官方 github https://github.com/go-redis/redis Install 1 go get -u github.com/go-redis/redis import 1 import &#34;github.com/go-redis/redis&#34; 连接redis 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 package main import ( &#34;fmt&#34; &#34;github.com/go-redis/redis&#34; ) func main() { // 创建一个]]></description></item><item><title>Golang flag 库</title><link>https://jicki.cn/golang-study-note-10/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/golang-study-note-10/</guid><description>Go语言基础 Golang flag 库 Go语言内置 - flag包实现了命令行参数的解析, flag包使得开发命令行工具更为简单。 flag参数类型 flag包 - 支持的命</description></item></channel></rss>