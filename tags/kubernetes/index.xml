<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>kubernetes - 标签 - 小炒肉</title><link>https://jicki.cn/tags/kubernetes/</link><description>kubernetes - 标签 - 小炒肉</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jicki@qq.com (小炒肉)</managingEditor><webMaster>jicki@qq.com (小炒肉)</webMaster><lastBuildDate>Fri, 28 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jicki.cn/tags/kubernetes/" rel="self" type="application/rss+xml"/><item><title>Prometheus 理论与实践</title><link>https://jicki.cn/prometheus/</link><pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/prometheus/</guid><description>Prometheus 监控设计 监控分类 业务监控 - 包含 用户访问QPS、DAU日活、访问状态、业务接口、产品转化率、业务异常数据等. 系统监控 - 包含 系统相关的 CPU、</description></item><item><title>Kubernetes 包管理 Helm</title><link>https://jicki.cn/helm/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/helm/</guid><description>Helm Helm 是 Kubernetes 的包管理器, 可以帮我们简化 kubernetes 应用部署操作, 在多项目的环境下, 应用的部署与管理就会变的频繁与复杂. Helm 通过包的方式, 可简化应用的版本发布</description></item><item><title>Helm Chart &amp; template 函数</title><link>https://jicki.cn/helm-chart/</link><pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/helm-chart/</guid><description>Helm Chart Chart 是 helm 管理应用的包, 一个Chart对应一个或一套应用. Chart 内部由YAML描述文件组成. Chart 目录结构 Chart.yaml : chart 的描述文件, 包含版本信息, 名称 等. Chart.lock</description></item><item><title>Helm - v3</title><link>https://jicki.cn/helm-v3/</link><pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/helm-v3/</guid><description>Helm v3 Helm v3 新特性 Helm v3 移除了 Tiller. &amp;ndash; Helm v2 是 C/S 架构, 主要分为客户端 helm 和服务端 Tiller. Tiller 主要用于在 Kubernetes 集群中管理各种应用发布的版本, 在 Helm v3 中移除了 Tiller, 版本相关的数</description></item><item><title>Helm - v2</title><link>https://jicki.cn/helm-v2/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/helm-v2/</guid><description>Helm v2 注: 当前 2020年8月 Helm v2 系列发布了 v2.16.10 版本， 这是 Helm v2 的最后一个 bugfix 版本，此后不会再为 Helm v2 提供错误修复。并且在三个月后，将停止为 Helm v2 提供安全</description></item><item><title>GitOps 实现云原生的持续交付</title><link>https://jicki.cn/gitops-kubernetes/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/gitops-kubernetes/</guid><description>GitOps GitOps是一种持续交付的方式。它的核心思想是将应用系统的声明性基础架构和应用程序存放在Git版本库中 Git 作为交付流水线的核心, 每个开发人</description></item><item><title>CI/CD with Drone Kubernetes and Gogs</title><link>https://jicki.cn/drone-kubernetes/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/drone-kubernetes/</guid><description>Drone Drone is a Container-Native, Continuous Delivery Platform。 我们可以理解为 Drone 是基于 容器原生的一个 持续集成、持续交付的平台。 官方网站是 https://drone.io/ Drone 支持的Git仓库有 GitHub GitLab Gogs Gitea Bitbucket Cloud Bitbucket</description></item><item><title>Kubernetes Horizontal Pod Autoscaler</title><link>https://jicki.cn/horizontal-pod-autoscale/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/horizontal-pod-autoscale/</guid><description>Horizontal Pod Autoscaler Pod 水平自动伸缩（Horizontal Pod Autoscaler） 简称 HPA HPA 可以基于CPU利用率自动伸缩 replication controller、deploym</description></item><item><title>Kubernetes RollingUpdate</title><link>https://jicki.cn/k8s-rollingupdate/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/k8s-rollingupdate/</guid><description>RollingUpdate kubernetes 应用升级操作 Deployment StatefulSet DaemonSet 应用部署/升级 kubernetes 在deployment statefulset daemonset 应用yaml中, 配置 RollingUpdate kubernetes 会将 pod 分批次逐步替换掉，可用来实现服务热升级。 一般来</description></item><item><title>KubeSphere 2.1.1 to kubernetes</title><link>https://jicki.cn/kubesphere-2.1.1/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://jicki.cn/kubesphere-2.1.1/</guid><description>KubeSphere 以应用为中心的容器平台, Golang 语言开发并且完全开源。 什么是 KubeSphere KubeSphere 是一款面向云原生设计的开源项目，在目前主流容器调度平台 Kubernetes 之上构建的分布式多租户容</description></item></channel></rss>